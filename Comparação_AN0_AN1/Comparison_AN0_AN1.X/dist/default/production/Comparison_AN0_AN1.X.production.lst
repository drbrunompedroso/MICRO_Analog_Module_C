

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 05 19:22:50 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.36
    20                           ; Generated 28/01/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     _ADRESL	set	4035
    55  0000                     _ADRESH	set	4036
    56  0000                     _OSCCON	set	4051
    57  0000                     _PORTDbits	set	3971
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _PORTD	set	3971
    60  0000                     _TRISD	set	3989
    61  0000                     _OSCTUNE	set	3995
    62  0000                     _ADCON2	set	4032
    63  0000                     _ADCON1	set	4033
    64  0000                     _ADCON0	set	4034
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69  007F14                     __pcinit:
    70                           	callstack 0
    71  007F14                     start_initialization:
    72                           	callstack 0
    73  007F14                     __initialization:
    74                           	callstack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (4 bytes)
    77  007F14  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    78  007F16  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    79  007F18  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    80  007F1A  6A01               	clrf	__pbssCOMRAM& (0+255),c
    81  007F1C                     end_of_initialization:
    82                           	callstack 0
    83  007F1C                     __end_of__initialization:
    84                           	callstack 0
    85  007F1C  0100               	movlb	0
    86  007F1E  EFC1  F03F         	goto	_main	;jump to C main() function
    87                           
    88                           	psect	bssCOMRAM
    89  000001                     __pbssCOMRAM:
    90                           	callstack 0
    91  000001                     _VdigADC_AN1:
    92                           	callstack 0
    93  000001                     	ds	2
    94  000003                     _VdigADC_AN0:
    95                           	callstack 0
    96  000003                     	ds	2
    97                           
    98                           	psect	cstackCOMRAM
    99  000005                     __pcstackCOMRAM:
   100                           	callstack 0
   101  000005                     ??_conv_AN0:
   102  000005                     ??_conv_AN1:
   103  000005                     
   104                           ; 1 bytes @ 0x0
   105  000005                     	ds	2
   106  000007                     
   107                           ; 1 bytes @ 0x2
   108 ;;
   109 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   110 ;;
   111 ;; *************** function _main *****************
   112 ;; Defined at:
   113 ;;		line 106 in file "Main_program.c"
   114 ;; Parameters:    Size  Location     Type
   115 ;;		None
   116 ;; Auto vars:     Size  Location     Type
   117 ;;		None
   118 ;; Return value:  Size  Location     Type
   119 ;;                  1    wreg      void 
   120 ;; Registers used:
   121 ;;		wreg, status,2, status,0, cstack
   122 ;; Tracked objects:
   123 ;;		On entry : 0/0
   124 ;;		On exit  : 0/0
   125 ;;		Unchanged: 0/0
   126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   127 ;;      Params:         0       0       0       0       0       0       0
   128 ;;      Locals:         0       0       0       0       0       0       0
   129 ;;      Temps:          0       0       0       0       0       0       0
   130 ;;      Totals:         0       0       0       0       0       0       0
   131 ;;Total ram usage:        0 bytes
   132 ;; Hardware stack levels required when called: 1
   133 ;; This function calls:
   134 ;;		_config_ADC
   135 ;;		_config_FOSC
   136 ;;		_config_IO
   137 ;;		_conv_AN0
   138 ;;		_conv_AN1
   139 ;; This function is called by:
   140 ;;		Startup code after reset
   141 ;; This function uses a non-reentrant model
   142 ;;
   143                           
   144                           	psect	text0
   145  007F82                     __ptext0:
   146                           	callstack 0
   147  007F82                     _main:
   148                           	callstack 30
   149  007F82                     
   150                           ;Main_program.c: 108:     config_FOSC();
   151  007F82  EC7E  F03F         	call	_config_FOSC	;wreg free
   152                           
   153                           ;Main_program.c: 109:     config_ADC();
   154  007F86  EC83  F03F         	call	_config_ADC	;wreg free
   155                           
   156                           ;Main_program.c: 110:     config_IO();
   157  007F8A  EC7A  F03F         	call	_config_IO	;wreg free
   158  007F8E                     l54:
   159                           
   160                           ;Main_program.c: 112:     {;Main_program.c: 113:         conv_AN0();
   161  007F8E  EC91  F03F         	call	_conv_AN0	;wreg free
   162                           
   163                           ;Main_program.c: 114:         conv_AN1();
   164  007F92  ECA9  F03F         	call	_conv_AN1	;wreg free
   165  007F96                     
   166                           ;Main_program.c: 115:         if(VdigADC_AN0 < VdigADC_AN1)
   167  007F96  5001               	movf	_VdigADC_AN1^0,w,c
   168  007F98  5C03               	subwf	_VdigADC_AN0^0,w,c
   169  007F9A  5002               	movf	(_VdigADC_AN1+1)^0,w,c
   170  007F9C  5804               	subwfb	(_VdigADC_AN0+1)^0,w,c
   171  007F9E  B0D8               	btfsc	status,0,c
   172  007FA0  EFD4  F03F         	goto	u31
   173  007FA4  EFD6  F03F         	goto	u30
   174  007FA8                     u31:
   175  007FA8  EFDB  F03F         	goto	l768
   176  007FAC                     u30:
   177  007FAC                     
   178                           ;Main_program.c: 116:         {;Main_program.c: 117:             PORTDbits.RD0 = 0;
   179  007FAC  9083               	bcf	131,0,c	;volatile
   180                           
   181                           ;Main_program.c: 118:             PORTDbits.RD1 = 1;
   182  007FAE  8283               	bsf	131,1,c	;volatile
   183                           
   184                           ;Main_program.c: 119:             PORTDbits.RD2 = 1;
   185  007FB0  8483               	bsf	131,2,c	;volatile
   186                           
   187                           ;Main_program.c: 120:         }
   188  007FB2  EFC7  F03F         	goto	l54
   189  007FB6                     l768:
   190  007FB6  5001               	movf	_VdigADC_AN1^0,w,c
   191  007FB8  1803               	xorwf	_VdigADC_AN0^0,w,c
   192  007FBA  E107               	bnz	u41
   193  007FBC  5002               	movf	(_VdigADC_AN1+1)^0,w,c
   194  007FBE  1804               	xorwf	(_VdigADC_AN0+1)^0,w,c
   195  007FC0  A4D8               	btfss	status,2,c
   196  007FC2  EFE5  F03F         	goto	u41
   197  007FC6  EFE7  F03F         	goto	u40
   198  007FCA                     u41:
   199  007FCA  EFEC  F03F         	goto	l772
   200  007FCE                     u40:
   201  007FCE                     
   202                           ;Main_program.c: 122:         {;Main_program.c: 123:             PORTDbits.RD0 = 1;
   203  007FCE  8083               	bsf	131,0,c	;volatile
   204                           
   205                           ;Main_program.c: 124:             PORTDbits.RD1 = 0;
   206  007FD0  9283               	bcf	131,1,c	;volatile
   207                           
   208                           ;Main_program.c: 125:             PORTDbits.RD2 = 1;
   209  007FD2  8483               	bsf	131,2,c	;volatile
   210                           
   211                           ;Main_program.c: 126:         }
   212  007FD4  EFC7  F03F         	goto	l54
   213  007FD8                     l772:
   214  007FD8  5003               	movf	_VdigADC_AN0^0,w,c
   215  007FDA  5C01               	subwf	_VdigADC_AN1^0,w,c
   216  007FDC  5004               	movf	(_VdigADC_AN0+1)^0,w,c
   217  007FDE  5802               	subwfb	(_VdigADC_AN1+1)^0,w,c
   218  007FE0  B0D8               	btfsc	status,0,c
   219  007FE2  EFF5  F03F         	goto	u51
   220  007FE6  EFF7  F03F         	goto	u50
   221  007FEA                     u51:
   222  007FEA  EFFC  F03F         	goto	l56
   223  007FEE                     u50:
   224  007FEE                     
   225                           ;Main_program.c: 128:         {;Main_program.c: 129:             PORTDbits.RD0 = 1;
   226  007FEE  8083               	bsf	131,0,c	;volatile
   227                           
   228                           ;Main_program.c: 130:             PORTDbits.RD1 = 1;
   229  007FF0  8283               	bsf	131,1,c	;volatile
   230                           
   231                           ;Main_program.c: 131:             PORTDbits.RD2 = 0;
   232  007FF2  9483               	bcf	131,2,c	;volatile
   233  007FF4  EFC7  F03F         	goto	l54
   234  007FF8                     l56:
   235  007FF8  EFC7  F03F         	goto	l54
   236  007FFC  EF00  F000         	goto	start
   237  008000                     __end_of_main:
   238                           	callstack 0
   239                           
   240 ;; *************** function _conv_AN1 *****************
   241 ;; Defined at:
   242 ;;		line 97 in file "Main_program.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, status,2
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   256 ;;      Params:         0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0
   258 ;;      Temps:          2       0       0       0       0       0       0
   259 ;;      Totals:         2       0       0       0       0       0       0
   260 ;;Total ram usage:        2 bytes
   261 ;; Hardware stack levels used: 1
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270  007F52                     __ptext1:
   271                           	callstack 0
   272  007F52                     _conv_AN1:
   273                           	callstack 30
   274  007F52                     
   275                           ;Main_program.c: 99:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   276  007F52  0E21               	movlw	33
   277  007F54                     u67:
   278  007F54  2EE8               	decfsz	wreg,f,c
   279  007F56  D7FE               	bra	u67
   280  007F58  F000               	nop	
   281  007F5A                     
   282                           ;Main_program.c: 100:     ADCON0 = 0X05;
   283  007F5A  0E05               	movlw	5
   284  007F5C  6EC2               	movwf	194,c	;volatile
   285  007F5E                     
   286                           ;Main_program.c: 101:     ADCON0bits.GO = 1;
   287  007F5E  82C2               	bsf	194,1,c	;volatile
   288  007F60                     l46:
   289  007F60  B2C2               	btfsc	194,1,c	;volatile
   290  007F62  EFB5  F03F         	goto	u21
   291  007F66  EFB7  F03F         	goto	u20
   292  007F6A                     u21:
   293  007F6A  EFB0  F03F         	goto	l46
   294  007F6E                     u20:
   295  007F6E                     
   296                           ;Main_program.c: 103:     VdigADC_AN1 = ADRESH;
   297  007F6E  CFC4 F001          	movff	4036,_VdigADC_AN1	;volatile
   298  007F72  6A02               	clrf	(_VdigADC_AN1+1)^0,c
   299  007F74                     
   300                           ;Main_program.c: 104:     VdigADC_AN1 = (VdigADC_AN1 << 8) + ADRESL;
   301  007F74  5001               	movf	_VdigADC_AN1^0,w,c
   302  007F76  6E05               	movwf	??_conv_AN1^0,c
   303  007F78  50C3               	movf	195,w,c	;volatile
   304  007F7A  6E01               	movwf	_VdigADC_AN1^0,c
   305  007F7C  C005  F002         	movff	??_conv_AN1,_VdigADC_AN1+1
   306  007F80  0012               	return		;funcret
   307  007F82                     __end_of_conv_AN1:
   308                           	callstack 0
   309                           
   310 ;; *************** function _conv_AN0 *****************
   311 ;; Defined at:
   312 ;;		line 88 in file "Main_program.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;		None
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, status,2
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   326 ;;      Params:         0       0       0       0       0       0       0
   327 ;;      Locals:         0       0       0       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0       0       0
   329 ;;      Totals:         2       0       0       0       0       0       0
   330 ;;Total ram usage:        2 bytes
   331 ;; Hardware stack levels used: 1
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text2
   340  007F22                     __ptext2:
   341                           	callstack 0
   342  007F22                     _conv_AN0:
   343                           	callstack 30
   344  007F22                     
   345                           ;Main_program.c: 90:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   346  007F22  0E21               	movlw	33
   347  007F24                     u77:
   348  007F24  2EE8               	decfsz	wreg,f,c
   349  007F26  D7FE               	bra	u77
   350  007F28  F000               	nop	
   351  007F2A                     
   352                           ;Main_program.c: 91:     ADCON0 = 0X01;
   353  007F2A  0E01               	movlw	1
   354  007F2C  6EC2               	movwf	194,c	;volatile
   355  007F2E                     
   356                           ;Main_program.c: 92:     ADCON0bits.GO = 1;
   357  007F2E  82C2               	bsf	194,1,c	;volatile
   358  007F30                     l40:
   359  007F30  B2C2               	btfsc	194,1,c	;volatile
   360  007F32  EF9D  F03F         	goto	u11
   361  007F36  EF9F  F03F         	goto	u10
   362  007F3A                     u11:
   363  007F3A  EF98  F03F         	goto	l40
   364  007F3E                     u10:
   365  007F3E                     
   366                           ;Main_program.c: 94:     VdigADC_AN0 = ADRESH;
   367  007F3E  CFC4 F003          	movff	4036,_VdigADC_AN0	;volatile
   368  007F42  6A04               	clrf	(_VdigADC_AN0+1)^0,c
   369  007F44                     
   370                           ;Main_program.c: 95:     VdigADC_AN0 = (VdigADC_AN0 << 8) + ADRESL;
   371  007F44  5003               	movf	_VdigADC_AN0^0,w,c
   372  007F46  6E05               	movwf	??_conv_AN0^0,c
   373  007F48  50C3               	movf	195,w,c	;volatile
   374  007F4A  6E03               	movwf	_VdigADC_AN0^0,c
   375  007F4C  C005  F004         	movff	??_conv_AN0,_VdigADC_AN0+1
   376  007F50  0012               	return		;funcret
   377  007F52                     __end_of_conv_AN0:
   378                           	callstack 0
   379                           
   380 ;; *************** function _config_IO *****************
   381 ;; Defined at:
   382 ;;		line 72 in file "Main_program.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2
   391 ;; Tracked objects:
   392 ;;		On entry : 0/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   396 ;;      Params:         0       0       0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0       0       0
   399 ;;      Totals:         0       0       0       0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels used: 1
   402 ;; This function calls:
   403 ;;		Nothing
   404 ;; This function is called by:
   405 ;;		_main
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410  007EF4                     __ptext3:
   411                           	callstack 0
   412  007EF4                     _config_IO:
   413                           	callstack 30
   414  007EF4                     
   415                           ;Main_program.c: 74:     TRISD = 0X00;
   416  007EF4  0E00               	movlw	0
   417  007EF6  6E95               	movwf	149,c	;volatile
   418  007EF8                     
   419                           ;Main_program.c: 75:     PORTD = 0XFF;
   420  007EF8  6883               	setf	131,c	;volatile
   421  007EFA  0012               	return		;funcret
   422  007EFC                     __end_of_config_IO:
   423                           	callstack 0
   424                           
   425 ;; *************** function _config_FOSC *****************
   426 ;; Defined at:
   427 ;;		line 83 in file "Main_program.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   441 ;;      Params:         0       0       0       0       0       0       0
   442 ;;      Locals:         0       0       0       0       0       0       0
   443 ;;      Temps:          0       0       0       0       0       0       0
   444 ;;      Totals:         0       0       0       0       0       0       0
   445 ;;Total ram usage:        0 bytes
   446 ;; Hardware stack levels used: 1
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_main
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           	psect	text4
   455  007EFC                     __ptext4:
   456                           	callstack 0
   457  007EFC                     _config_FOSC:
   458                           	callstack 30
   459  007EFC                     
   460                           ;Main_program.c: 85:     OSCCON = 0X72;
   461  007EFC  0E72               	movlw	114
   462  007EFE  6ED3               	movwf	211,c	;volatile
   463                           
   464                           ;Main_program.c: 86:     OSCTUNE = 0X00;
   465  007F00  0E00               	movlw	0
   466  007F02  6E9B               	movwf	155,c	;volatile
   467  007F04  0012               	return		;funcret
   468  007F06                     __end_of_config_FOSC:
   469                           	callstack 0
   470                           
   471 ;; *************** function _config_ADC *****************
   472 ;; Defined at:
   473 ;;		line 77 in file "Main_program.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   487 ;;      Params:         0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0
   489 ;;      Temps:          0       0       0       0       0       0       0
   490 ;;      Totals:         0       0       0       0       0       0       0
   491 ;;Total ram usage:        0 bytes
   492 ;; Hardware stack levels used: 1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text5
   501  007F06                     __ptext5:
   502                           	callstack 0
   503  007F06                     _config_ADC:
   504                           	callstack 30
   505  007F06                     
   506                           ;Main_program.c: 79:     ADCON0 = 0X01;
   507  007F06  0E01               	movlw	1
   508  007F08  6EC2               	movwf	194,c	;volatile
   509                           
   510                           ;Main_program.c: 80:     ADCON1 = 0X0D;
   511  007F0A  0E0D               	movlw	13
   512  007F0C  6EC1               	movwf	193,c	;volatile
   513                           
   514                           ;Main_program.c: 81:     ADCON2 = 0X87;
   515  007F0E  0E87               	movlw	135
   516  007F10  6EC0               	movwf	192,c	;volatile
   517  007F12  0012               	return		;funcret
   518  007F14                     __end_of_config_ADC:
   519                           	callstack 0
   520  0000                     
   521                           	psect	rparam
   522  0000                     
   523                           	psect	idloc
   524                           
   525                           ;Config register IDLOC0 @ 0x200000
   526                           ;	unspecified, using default values
   527  200000                     	org	2097152
   528  200000  FF                 	db	255
   529                           
   530                           ;Config register IDLOC1 @ 0x200001
   531                           ;	unspecified, using default values
   532  200001                     	org	2097153
   533  200001  FF                 	db	255
   534                           
   535                           ;Config register IDLOC2 @ 0x200002
   536                           ;	unspecified, using default values
   537  200002                     	org	2097154
   538  200002  FF                 	db	255
   539                           
   540                           ;Config register IDLOC3 @ 0x200003
   541                           ;	unspecified, using default values
   542  200003                     	org	2097155
   543  200003  FF                 	db	255
   544                           
   545                           ;Config register IDLOC4 @ 0x200004
   546                           ;	unspecified, using default values
   547  200004                     	org	2097156
   548  200004  FF                 	db	255
   549                           
   550                           ;Config register IDLOC5 @ 0x200005
   551                           ;	unspecified, using default values
   552  200005                     	org	2097157
   553  200005  FF                 	db	255
   554                           
   555                           ;Config register IDLOC6 @ 0x200006
   556                           ;	unspecified, using default values
   557  200006                     	org	2097158
   558  200006  FF                 	db	255
   559                           
   560                           ;Config register IDLOC7 @ 0x200007
   561                           ;	unspecified, using default values
   562  200007                     	org	2097159
   563  200007  FF                 	db	255
   564                           
   565                           	psect	config
   566                           
   567                           ; Padding undefined space
   568  300000                     	org	3145728
   569  300000  FF                 	db	255
   570                           
   571                           ;Config register CONFIG1H @ 0x300001
   572                           ;	Oscillator Selection bits
   573                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   574                           ;	Fail-Safe Clock Monitor Enable bit
   575                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   576                           ;	Internal/External Oscillator Switchover bit
   577                           ;	IESO = OFF, Oscillator Switchover mode disabled
   578  300001                     	org	3145729
   579  300001  08                 	db	8
   580                           
   581                           ;Config register CONFIG2L @ 0x300002
   582                           ;	Power-up Timer Enable bit
   583                           ;	PWRT = OFF, PWRT disabled
   584                           ;	Brown-out Reset Enable bits
   585                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   586                           ;	Brown Out Reset Voltage bits
   587                           ;	BORV = 3, Minimum setting
   588  300002                     	org	3145730
   589  300002  1F                 	db	31
   590                           
   591                           ;Config register CONFIG2H @ 0x300003
   592                           ;	Watchdog Timer Enable bit
   593                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   594                           ;	Watchdog Timer Postscale Select bits
   595                           ;	WDTPS = 32768, 1:32768
   596  300003                     	org	3145731
   597  300003  1E                 	db	30
   598                           
   599                           ; Padding undefined space
   600  300004                     	org	3145732
   601  300004  FF                 	db	255
   602                           
   603                           ;Config register CONFIG3H @ 0x300005
   604                           ;	CCP2 MUX bit
   605                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   606                           ;	PORTB A/D Enable bit
   607                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   608                           ;	Low-Power Timer1 Oscillator Enable bit
   609                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   610                           ;	MCLR Pin Enable bit
   611                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   612  300005                     	org	3145733
   613  300005  83                 	db	131
   614                           
   615                           ;Config register CONFIG4L @ 0x300006
   616                           ;	Stack Full/Underflow Reset Enable bit
   617                           ;	STVREN = ON, Stack full/underflow will cause Reset
   618                           ;	Single-Supply ICSP Enable bit
   619                           ;	LVP = OFF, Single-Supply ICSP disabled
   620                           ;	Extended Instruction Set Enable bit
   621                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   622                           ;	Background Debugger Enable bit
   623                           ;	DEBUG = 0x1, unprogrammed default
   624  300006                     	org	3145734
   625  300006  81                 	db	129
   626                           
   627                           ; Padding undefined space
   628  300007                     	org	3145735
   629  300007  FF                 	db	255
   630                           
   631                           ;Config register CONFIG5L @ 0x300008
   632                           ;	Code Protection bit
   633                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   634                           ;	Code Protection bit
   635                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   636                           ;	Code Protection bit
   637                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   638                           ;	Code Protection bit
   639                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   640  300008                     	org	3145736
   641  300008  0F                 	db	15
   642                           
   643                           ;Config register CONFIG5H @ 0x300009
   644                           ;	Boot Block Code Protection bit
   645                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   646                           ;	Data EEPROM Code Protection bit
   647                           ;	CPD = OFF, Data EEPROM not code-protected
   648  300009                     	org	3145737
   649  300009  C0                 	db	192
   650                           
   651                           ;Config register CONFIG6L @ 0x30000A
   652                           ;	Write Protection bit
   653                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   654                           ;	Write Protection bit
   655                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   656                           ;	Write Protection bit
   657                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   658                           ;	Write Protection bit
   659                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   660  30000A                     	org	3145738
   661  30000A  0F                 	db	15
   662                           
   663                           ;Config register CONFIG6H @ 0x30000B
   664                           ;	Configuration Register Write Protection bit
   665                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   666                           ;	Boot Block Write Protection bit
   667                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   668                           ;	Data EEPROM Write Protection bit
   669                           ;	WRTD = OFF, Data EEPROM not write-protected
   670  30000B                     	org	3145739
   671  30000B  E0                 	db	224
   672                           
   673                           ;Config register CONFIG7L @ 0x30000C
   674                           ;	Table Read Protection bit
   675                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   676                           ;	Table Read Protection bit
   677                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   678                           ;	Table Read Protection bit
   679                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   680                           ;	Table Read Protection bit
   681                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   682  30000C                     	org	3145740
   683  30000C  0F                 	db	15
   684                           
   685                           ;Config register CONFIG7H @ 0x30000D
   686                           ;	Boot Block Table Read Protection bit
   687                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   688  30000D                     	org	3145741
   689  30000D  40                 	db	64
   690                           tosu	equ	0xFFF
   691                           tosh	equ	0xFFE
   692                           tosl	equ	0xFFD
   693                           stkptr	equ	0xFFC
   694                           pclatu	equ	0xFFB
   695                           pclath	equ	0xFFA
   696                           pcl	equ	0xFF9
   697                           tblptru	equ	0xFF8
   698                           tblptrh	equ	0xFF7
   699                           tblptrl	equ	0xFF6
   700                           tablat	equ	0xFF5
   701                           prodh	equ	0xFF4
   702                           prodl	equ	0xFF3
   703                           indf0	equ	0xFEF
   704                           postinc0	equ	0xFEE
   705                           postdec0	equ	0xFED
   706                           preinc0	equ	0xFEC
   707                           plusw0	equ	0xFEB
   708                           fsr0h	equ	0xFEA
   709                           fsr0l	equ	0xFE9
   710                           wreg	equ	0xFE8
   711                           indf1	equ	0xFE7
   712                           postinc1	equ	0xFE6
   713                           postdec1	equ	0xFE5
   714                           preinc1	equ	0xFE4
   715                           plusw1	equ	0xFE3
   716                           fsr1h	equ	0xFE2
   717                           fsr1l	equ	0xFE1
   718                           bsr	equ	0xFE0
   719                           indf2	equ	0xFDF
   720                           postinc2	equ	0xFDE
   721                           postdec2	equ	0xFDD
   722                           preinc2	equ	0xFDC
   723                           plusw2	equ	0xFDB
   724                           fsr2h	equ	0xFDA
   725                           fsr2l	equ	0xFD9
   726                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       6
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_conv_AN0
    _main->_conv_AN1

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
                           _conv_AN1
 ---------------------------------------------------------------------------------
 (1) _conv_AN1                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0
   _conv_AN1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2       6       1        4.7%
BITBIGSFRhhh        2C      0       0      16        0.0%
BITBIGSFRhlh        24      0       0      18        0.0%
BITBIGSFRlh         11      0       0      20        0.0%
BITBIGSFRhhlh        E      0       0      17        0.0%
BITBIGSFRhll         5      0       0      19        0.0%
BITBIGSFRll          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      22        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 05 19:22:50 2022

                     l31 7EFA                       l40 7F30                       l34 7F12  
                     l42 7F3E                       l43 7F50                       l37 7F04  
                     l46 7F60                       l54 7F8E                       l48 7F6E  
                     l56 7FF8                       l49 7F80                       u10 7F3E  
                     u11 7F3A                       u20 7F6E                       u21 7F6A  
                     u30 7FAC                       u31 7FA8                       u40 7FCE  
                     u41 7FCA                       u50 7FEE                       u51 7FEA  
                     u67 7F54                       u77 7F24                      l740 7EF8  
                    l742 7F06                      l750 7F2E                      l744 7EFC  
                    l752 7F44                      l760 7F74                      l738 7EF4  
                    l746 7F22                      l754 7F52                      l770 7FCE  
                    l762 7F82                      l748 7F2A                      l756 7F5A  
                    l772 7FD8                      l764 7F96                      l758 7F5E  
                    l774 7FEE                      l766 7FAC                      l768 7FB6  
                    wreg 000FE8                     _main 7F82                     start 0000  
           ___param_bank 000000                    ?_main 0005                    _PORTD 000F83  
                  _TRISD 000F95                    status 000FD8          __initialization 7F14  
           __end_of_main 8000                   ??_main 0007            __activetblptr 000000  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _OSCCON 000FD3  
       __end_of_conv_AN0 7F52         __end_of_conv_AN1 7F82                   isa$std 000001  
             __accesstop 0080  __end_of__initialization 7F1C            ___rparam_used 000001  
         __pcstackCOMRAM 0005              _VdigADC_AN0 0003              _VdigADC_AN1 0001  
             _config_ADC 7F06                  _OSCTUNE 000F9B                ?_conv_AN0 0005  
              ?_conv_AN1 0005                  __Hparam 0000                  __Lparam 0000  
      __end_of_config_IO 7EFC                  __pcinit 7F14                  __ramtop 0600  
                __ptext0 7F82                  __ptext1 7F52                  __ptext2 7F22  
                __ptext3 7EF4                  __ptext4 7EFC                  __ptext5 7F06  
             ??_conv_AN0 0005               ??_conv_AN1 0005     end_of_initialization 7F1C  
              _PORTDbits 000F83              ?_config_ADC 0005            ??_config_FOSC 0005  
    start_initialization 7F14      __end_of_config_FOSC 7F06              __pbssCOMRAM 0001  
              _config_IO 7EF4              _config_FOSC 7EFC               ?_config_IO 0005  
             _ADCON0bits 000FC2             ??_config_ADC 0005                 __Hrparam 0000  
               __Lrparam 0000       __end_of_config_ADC 7F14                 _conv_AN0 7F22  
               _conv_AN1 7F52                 isa$xinst 000000              ??_config_IO 0005  
           ?_config_FOSC 0005  
