

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 20 23:19:12 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4520 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     _ADRESL	set	4035
    54  0000                     _ADRESH	set	4036
    55  0000                     _OSCCON	set	4051
    56  0000                     _PORTDbits	set	3971
    57  0000                     _ADCON0bits	set	4034
    58  0000                     _PORTD	set	3971
    59  0000                     _TRISD	set	3989
    60  0000                     _OSCTUNE	set	3995
    61  0000                     _ADCON2	set	4032
    62  0000                     _ADCON1	set	4033
    63  0000                     _ADCON0	set	4034
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68  007F7A                     __pcinit:
    69                           	callstack 0
    70  007F7A                     start_initialization:
    71                           	callstack 0
    72  007F7A                     __initialization:
    73                           	callstack 0
    74                           
    75                           ; Clear objects allocated to COMRAM (2 bytes)
    76  007F7A  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    77  007F7C  6A01               	clrf	__pbssCOMRAM& (0+255),c
    78  007F7E                     end_of_initialization:
    79                           	callstack 0
    80  007F7E                     __end_of__initialization:
    81                           	callstack 0
    82  007F7E  0100               	movlb	0
    83  007F80  EFC9  F03F         	goto	_main	;jump to C main() function
    84                           
    85                           	psect	bssCOMRAM
    86  000001                     __pbssCOMRAM:
    87                           	callstack 0
    88  000001                     _VdigADC:
    89                           	callstack 0
    90  000001                     	ds	2
    91                           
    92                           	psect	cstackCOMRAM
    93  000003                     __pcstackCOMRAM:
    94                           	callstack 0
    95  000003                     ??_conv_AN0:
    96  000003                     
    97                           ; 1 bytes @ 0x0
    98  000003                     	ds	2
    99  000005                     
   100                           ; 1 bytes @ 0x2
   101 ;;
   102 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   103 ;;
   104 ;; *************** function _main *****************
   105 ;; Defined at:
   106 ;;		line 93 in file "main_program.c"
   107 ;; Parameters:    Size  Location     Type
   108 ;;		None
   109 ;; Auto vars:     Size  Location     Type
   110 ;;		None
   111 ;; Return value:  Size  Location     Type
   112 ;;                  1    wreg      void 
   113 ;; Registers used:
   114 ;;		wreg, status,2, status,0, cstack
   115 ;; Tracked objects:
   116 ;;		On entry : 0/0
   117 ;;		On exit  : 0/0
   118 ;;		Unchanged: 0/0
   119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   120 ;;      Params:         0       0       0       0       0       0       0
   121 ;;      Locals:         0       0       0       0       0       0       0
   122 ;;      Temps:          0       0       0       0       0       0       0
   123 ;;      Totals:         0       0       0       0       0       0       0
   124 ;;Total ram usage:        0 bytes
   125 ;; Hardware stack levels required when called: 1
   126 ;; This function calls:
   127 ;;		_config_ADC
   128 ;;		_config_FOSC
   129 ;;		_config_IO
   130 ;;		_conv_AN0
   131 ;; This function is called by:
   132 ;;		Startup code after reset
   133 ;; This function uses a non-reentrant model
   134 ;;
   135                           
   136                           	psect	text0
   137  007F92                     __ptext0:
   138                           	callstack 0
   139  007F92                     _main:
   140                           	callstack 30
   141  007F92                     
   142                           ;main_program.c: 95:     config_FOSC();
   143  007F92  ECB8  F03F         	call	_config_FOSC	;wreg free
   144                           
   145                           ;main_program.c: 96:     config_ADC();
   146  007F96  ECC2  F03F         	call	_config_ADC	;wreg free
   147                           
   148                           ;main_program.c: 97:     config_IO();
   149  007F9A  ECB4  F03F         	call	_config_IO	;wreg free
   150  007F9E                     l46:
   151                           
   152                           ;main_program.c: 99:     {;main_program.c: 100:         conv_AN0();
   153  007F9E  ECE2  F03F         	call	_conv_AN0	;wreg free
   154  007FA2                     
   155                           ;main_program.c: 101:         if(VdigADC >= 512)
   156  007FA2  0E02               	movlw	2
   157  007FA4  5C02               	subwf	(_VdigADC+1)^0,w,c
   158  007FA6  A0D8               	btfss	status,0,c
   159  007FA8  EFD8  F03F         	goto	u21
   160  007FAC  EFDA  F03F         	goto	u20
   161  007FB0                     u21:
   162  007FB0  EFDD  F03F         	goto	l47
   163  007FB4                     u20:
   164  007FB4                     
   165                           ;main_program.c: 102:         {;main_program.c: 103:             PORTDbits.RD0 = 0;
   166  007FB4  9083               	bcf	131,0,c	;volatile
   167                           
   168                           ;main_program.c: 104:         }
   169  007FB6  EFCF  F03F         	goto	l46
   170  007FBA                     l47:
   171                           
   172                           ;main_program.c: 106:         {;main_program.c: 107:             PORTDbits.RD0 = 1;
   173  007FBA  8083               	bsf	131,0,c	;volatile
   174  007FBC  EFCF  F03F         	goto	l46
   175  007FC0  EF00  F000         	goto	start
   176  007FC4                     __end_of_main:
   177                           	callstack 0
   178                           
   179 ;; *************** function _conv_AN0 *****************
   180 ;; Defined at:
   181 ;;		line 85 in file "main_program.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   195 ;;      Params:         0       0       0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0
   197 ;;      Temps:          2       0       0       0       0       0       0
   198 ;;      Totals:         2       0       0       0       0       0       0
   199 ;;Total ram usage:        2 bytes
   200 ;; Hardware stack levels used: 1
   201 ;; This function calls:
   202 ;;		Nothing
   203 ;; This function is called by:
   204 ;;		_main
   205 ;; This function uses a non-reentrant model
   206 ;;
   207                           
   208                           	psect	text1
   209  007FC4                     __ptext1:
   210                           	callstack 0
   211  007FC4                     _conv_AN0:
   212                           	callstack 30
   213  007FC4                     
   214                           ;main_program.c: 87:     _delay((unsigned long)((200)*(8000000/4000.0)));
   215  007FC4  0E03               	movlw	3
   216  007FC6  6E04               	movwf	(??_conv_AN0+1)^0,c
   217  007FC8  0E08               	movlw	8
   218  007FCA  6E03               	movwf	??_conv_AN0^0,c
   219  007FCC  0E77               	movlw	119
   220  007FCE                     u37:
   221  007FCE  2EE8               	decfsz	wreg,f,c
   222  007FD0  D7FE               	bra	u37
   223  007FD2  2E03               	decfsz	??_conv_AN0^0,f,c
   224  007FD4  D7FC               	bra	u37
   225  007FD6  2E04               	decfsz	(??_conv_AN0+1)^0,f,c
   226  007FD8  D7FA               	bra	u37
   227  007FDA  F000               	nop	
   228  007FDC                     
   229                           ;main_program.c: 88:     ADCON0bits.GO = 1;
   230  007FDC  82C2               	bsf	194,1,c	;volatile
   231  007FDE                     l38:
   232  007FDE  B2C2               	btfsc	194,1,c	;volatile
   233  007FE0  EFF4  F03F         	goto	u11
   234  007FE4  EFF6  F03F         	goto	u10
   235  007FE8                     u11:
   236  007FE8  EFEF  F03F         	goto	l38
   237  007FEC                     u10:
   238  007FEC                     
   239                           ;main_program.c: 90:     VdigADC = ADRESH;
   240  007FEC  CFC4 F001          	movff	4036,_VdigADC	;volatile
   241  007FF0  6A02               	clrf	(_VdigADC+1)^0,c
   242  007FF2                     
   243                           ;main_program.c: 91:     VdigADC = (VdigADC << 8) + ADRESL;
   244  007FF2  5001               	movf	_VdigADC^0,w,c
   245  007FF4  6E03               	movwf	??_conv_AN0^0,c
   246  007FF6  50C3               	movf	195,w,c	;volatile
   247  007FF8  6E01               	movwf	_VdigADC^0,c
   248  007FFA  C003  F002         	movff	??_conv_AN0,_VdigADC+1
   249  007FFE  0012               	return		;funcret
   250  008000                     __end_of_conv_AN0:
   251                           	callstack 0
   252                           
   253 ;; *************** function _config_IO *****************
   254 ;; Defined at:
   255 ;;		line 69 in file "main_program.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels used: 1
   275 ;; This function calls:
   276 ;;		Nothing
   277 ;; This function is called by:
   278 ;;		_main
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text2
   283  007F68                     __ptext2:
   284                           	callstack 0
   285  007F68                     _config_IO:
   286                           	callstack 30
   287  007F68                     
   288                           ;main_program.c: 71:     TRISD = 0X00;
   289  007F68  0E00               	movlw	0
   290  007F6A  6E95               	movwf	149,c	;volatile
   291  007F6C                     
   292                           ;main_program.c: 72:     PORTD = 0XFF;
   293  007F6C  6883               	setf	131,c	;volatile
   294  007F6E  0012               	return		;funcret
   295  007F70                     __end_of_config_IO:
   296                           	callstack 0
   297                           
   298 ;; *************** function _config_FOSC *****************
   299 ;; Defined at:
   300 ;;		line 80 in file "main_program.c"
   301 ;; Parameters:    Size  Location     Type
   302 ;;		None
   303 ;; Auto vars:     Size  Location     Type
   304 ;;		None
   305 ;; Return value:  Size  Location     Type
   306 ;;                  1    wreg      void 
   307 ;; Registers used:
   308 ;;		wreg, status,2
   309 ;; Tracked objects:
   310 ;;		On entry : 0/0
   311 ;;		On exit  : 0/0
   312 ;;		Unchanged: 0/0
   313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   314 ;;      Params:         0       0       0       0       0       0       0
   315 ;;      Locals:         0       0       0       0       0       0       0
   316 ;;      Temps:          0       0       0       0       0       0       0
   317 ;;      Totals:         0       0       0       0       0       0       0
   318 ;;Total ram usage:        0 bytes
   319 ;; Hardware stack levels used: 1
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text3
   328  007F70                     __ptext3:
   329                           	callstack 0
   330  007F70                     _config_FOSC:
   331                           	callstack 30
   332  007F70                     
   333                           ;main_program.c: 82:     OSCCON = 0X72;
   334  007F70  0E72               	movlw	114
   335  007F72  6ED3               	movwf	211,c	;volatile
   336                           
   337                           ;main_program.c: 83:     OSCTUNE = 0X00;
   338  007F74  0E00               	movlw	0
   339  007F76  6E9B               	movwf	155,c	;volatile
   340  007F78  0012               	return		;funcret
   341  007F7A                     __end_of_config_FOSC:
   342                           	callstack 0
   343                           
   344 ;; *************** function _config_ADC *****************
   345 ;; Defined at:
   346 ;;		line 74 in file "main_program.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, status,2
   355 ;; Tracked objects:
   356 ;;		On entry : 0/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   360 ;;      Params:         0       0       0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels used: 1
   366 ;; This function calls:
   367 ;;		Nothing
   368 ;; This function is called by:
   369 ;;		_main
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text4
   374  007F84                     __ptext4:
   375                           	callstack 0
   376  007F84                     _config_ADC:
   377                           	callstack 30
   378  007F84                     
   379                           ;main_program.c: 76:     ADCON0 = 0X01;
   380  007F84  0E01               	movlw	1
   381  007F86  6EC2               	movwf	194,c	;volatile
   382                           
   383                           ;main_program.c: 77:     ADCON1 = 0X0E;
   384  007F88  0E0E               	movlw	14
   385  007F8A  6EC1               	movwf	193,c	;volatile
   386                           
   387                           ;main_program.c: 78:     ADCON2 = 0X87;
   388  007F8C  0E87               	movlw	135
   389  007F8E  6EC0               	movwf	192,c	;volatile
   390  007F90  0012               	return		;funcret
   391  007F92                     __end_of_config_ADC:
   392                           	callstack 0
   393  0000                     
   394                           	psect	rparam
   395  0000                     
   396                           	psect	idloc
   397                           
   398                           ;Config register IDLOC0 @ 0x200000
   399                           ;	unspecified, using default values
   400  200000                     	org	2097152
   401  200000  FF                 	db	255
   402                           
   403                           ;Config register IDLOC1 @ 0x200001
   404                           ;	unspecified, using default values
   405  200001                     	org	2097153
   406  200001  FF                 	db	255
   407                           
   408                           ;Config register IDLOC2 @ 0x200002
   409                           ;	unspecified, using default values
   410  200002                     	org	2097154
   411  200002  FF                 	db	255
   412                           
   413                           ;Config register IDLOC3 @ 0x200003
   414                           ;	unspecified, using default values
   415  200003                     	org	2097155
   416  200003  FF                 	db	255
   417                           
   418                           ;Config register IDLOC4 @ 0x200004
   419                           ;	unspecified, using default values
   420  200004                     	org	2097156
   421  200004  FF                 	db	255
   422                           
   423                           ;Config register IDLOC5 @ 0x200005
   424                           ;	unspecified, using default values
   425  200005                     	org	2097157
   426  200005  FF                 	db	255
   427                           
   428                           ;Config register IDLOC6 @ 0x200006
   429                           ;	unspecified, using default values
   430  200006                     	org	2097158
   431  200006  FF                 	db	255
   432                           
   433                           ;Config register IDLOC7 @ 0x200007
   434                           ;	unspecified, using default values
   435  200007                     	org	2097159
   436  200007  FF                 	db	255
   437                           
   438                           	psect	config
   439                           
   440                           ; Padding undefined space
   441  300000                     	org	3145728
   442  300000  FF                 	db	255
   443                           
   444                           ;Config register CONFIG1H @ 0x300001
   445                           ;	Oscillator Selection bits
   446                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
   447                           ;	Fail-Safe Clock Monitor Enable bit
   448                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   449                           ;	Internal/External Oscillator Switchover bit
   450                           ;	IESO = OFF, Oscillator Switchover mode disabled
   451  300001                     	org	3145729
   452  300001  08                 	db	8
   453                           
   454                           ;Config register CONFIG2L @ 0x300002
   455                           ;	Power-up Timer Enable bit
   456                           ;	PWRT = OFF, PWRT disabled
   457                           ;	Brown-out Reset Enable bits
   458                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   459                           ;	Brown Out Reset Voltage bits
   460                           ;	BORV = 3, Minimum setting
   461  300002                     	org	3145730
   462  300002  1F                 	db	31
   463                           
   464                           ;Config register CONFIG2H @ 0x300003
   465                           ;	Watchdog Timer Enable bit
   466                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   467                           ;	Watchdog Timer Postscale Select bits
   468                           ;	WDTPS = 32768, 1:32768
   469  300003                     	org	3145731
   470  300003  1E                 	db	30
   471                           
   472                           ; Padding undefined space
   473  300004                     	org	3145732
   474  300004  FF                 	db	255
   475                           
   476                           ;Config register CONFIG3H @ 0x300005
   477                           ;	CCP2 MUX bit
   478                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   479                           ;	PORTB A/D Enable bit
   480                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
   481                           ;	Low-Power Timer1 Oscillator Enable bit
   482                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   483                           ;	MCLR Pin Enable bit
   484                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   485  300005                     	org	3145733
   486  300005  83                 	db	131
   487                           
   488                           ;Config register CONFIG4L @ 0x300006
   489                           ;	Stack Full/Underflow Reset Enable bit
   490                           ;	STVREN = ON, Stack full/underflow will cause Reset
   491                           ;	Single-Supply ICSP Enable bit
   492                           ;	LVP = OFF, Single-Supply ICSP disabled
   493                           ;	Extended Instruction Set Enable bit
   494                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   495                           ;	Background Debugger Enable bit
   496                           ;	DEBUG = 0x1, unprogrammed default
   497  300006                     	org	3145734
   498  300006  81                 	db	129
   499                           
   500                           ; Padding undefined space
   501  300007                     	org	3145735
   502  300007  FF                 	db	255
   503                           
   504                           ;Config register CONFIG5L @ 0x300008
   505                           ;	Code Protection bit
   506                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   507                           ;	Code Protection bit
   508                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   509                           ;	Code Protection bit
   510                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   511                           ;	Code Protection bit
   512                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   513  300008                     	org	3145736
   514  300008  0F                 	db	15
   515                           
   516                           ;Config register CONFIG5H @ 0x300009
   517                           ;	Boot Block Code Protection bit
   518                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   519                           ;	Data EEPROM Code Protection bit
   520                           ;	CPD = OFF, Data EEPROM not code-protected
   521  300009                     	org	3145737
   522  300009  C0                 	db	192
   523                           
   524                           ;Config register CONFIG6L @ 0x30000A
   525                           ;	Write Protection bit
   526                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   527                           ;	Write Protection bit
   528                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   529                           ;	Write Protection bit
   530                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   531                           ;	Write Protection bit
   532                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   533  30000A                     	org	3145738
   534  30000A  0F                 	db	15
   535                           
   536                           ;Config register CONFIG6H @ 0x30000B
   537                           ;	Configuration Register Write Protection bit
   538                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   539                           ;	Boot Block Write Protection bit
   540                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   541                           ;	Data EEPROM Write Protection bit
   542                           ;	WRTD = OFF, Data EEPROM not write-protected
   543  30000B                     	org	3145739
   544  30000B  E0                 	db	224
   545                           
   546                           ;Config register CONFIG7L @ 0x30000C
   547                           ;	Table Read Protection bit
   548                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   549                           ;	Table Read Protection bit
   550                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   551                           ;	Table Read Protection bit
   552                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   553                           ;	Table Read Protection bit
   554                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   555  30000C                     	org	3145740
   556  30000C  0F                 	db	15
   557                           
   558                           ;Config register CONFIG7H @ 0x30000D
   559                           ;	Boot Block Table Read Protection bit
   560                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   561  30000D                     	org	3145741
   562  30000D  40                 	db	64
   563                           tosu	equ	0xFFF
   564                           tosh	equ	0xFFE
   565                           tosl	equ	0xFFD
   566                           stkptr	equ	0xFFC
   567                           pclatu	equ	0xFFB
   568                           pclath	equ	0xFFA
   569                           pcl	equ	0xFF9
   570                           tblptru	equ	0xFF8
   571                           tblptrh	equ	0xFF7
   572                           tblptrl	equ	0xFF6
   573                           tablat	equ	0xFF5
   574                           prodh	equ	0xFF4
   575                           prodl	equ	0xFF3
   576                           indf0	equ	0xFEF
   577                           postinc0	equ	0xFEE
   578                           postdec0	equ	0xFED
   579                           preinc0	equ	0xFEC
   580                           plusw0	equ	0xFEB
   581                           fsr0h	equ	0xFEA
   582                           fsr0l	equ	0xFE9
   583                           wreg	equ	0xFE8
   584                           indf1	equ	0xFE7
   585                           postinc1	equ	0xFE6
   586                           postdec1	equ	0xFE5
   587                           preinc1	equ	0xFE4
   588                           plusw1	equ	0xFE3
   589                           fsr1h	equ	0xFE2
   590                           fsr1l	equ	0xFE1
   591                           bsr	equ	0xFE0
   592                           indf2	equ	0xFDF
   593                           postinc2	equ	0xFDE
   594                           postdec2	equ	0xFDD
   595                           preinc2	equ	0xFDC
   596                           plusw2	equ	0xFDB
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       4
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_conv_AN0

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                         _config_ADC
                        _config_FOSC
                          _config_IO
                           _conv_AN0
 ---------------------------------------------------------------------------------
 (1) _conv_AN0                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _config_IO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_FOSC                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_ADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config_ADC
   _config_FOSC
   _config_IO
   _conv_AN0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2       4       1        3.1%
BITBIGSFRhhh        2C      0       0      16        0.0%
BITBIGSFRhlh        24      0       0      18        0.0%
BITBIGSFRlh         11      0       0      20        0.0%
BITBIGSFRhhlh        E      0       0      17        0.0%
BITBIGSFRhll         5      0       0      19        0.0%
BITBIGSFRll          3      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      22        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 20 23:19:12 2022

                     l32 7F90                       l40 7FEC                       l41 7FFE  
                     l35 7F78                       l29 7F6E                       l38 7FDE  
                     l46 7F9E                       l47 7FBA                       u10 7FEC  
                     u11 7FE8                       u20 7FB4                       u21 7FB0  
                     u37 7FCE                      l731 7F84                      l733 7F70  
                    l741 7F92                      l727 7F68                      l735 7FC4  
                    l743 7FA2                      l729 7F6C                      l737 7FDC  
                    l745 7FB4                      l739 7FF2                      wreg 000FE8  
                   _main 7F92                     start 0000             ___param_bank 000000  
                  ?_main 0003                    _PORTD 000F83                    _TRISD 000F95  
                  status 000FD8          __initialization 7F7A             __end_of_main 7FC4  
                 ??_main 0005            __activetblptr 000000                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _OSCCON 000FD3         __end_of_conv_AN0 8000  
                 isa$std 000001               __accesstop 0080  __end_of__initialization 7F7E  
          ___rparam_used 000001           __pcstackCOMRAM 0003               _config_ADC 7F84  
                _OSCTUNE 000F9B                ?_conv_AN0 0003                  _VdigADC 0001  
                __Hparam 0000                  __Lparam 0000        __end_of_config_IO 7F70  
                __pcinit 7F7A                  __ramtop 0600                  __ptext0 7F92  
                __ptext1 7FC4                  __ptext2 7F68                  __ptext3 7F70  
                __ptext4 7F84               ??_conv_AN0 0003     end_of_initialization 7F7E  
              _PORTDbits 000F83              ?_config_ADC 0003            ??_config_FOSC 0003  
    start_initialization 7F7A      __end_of_config_FOSC 7F7A              __pbssCOMRAM 0001  
              _config_IO 7F68              _config_FOSC 7F70               ?_config_IO 0003  
             _ADCON0bits 000FC2             ??_config_ADC 0003                 __Hrparam 0000  
               __Lrparam 0000       __end_of_config_ADC 7F92                 _conv_AN0 7FC4  
               isa$xinst 000000              ??_config_IO 0003             ?_config_FOSC 0003  
